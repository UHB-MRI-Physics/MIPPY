# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.

stages:
  - test
  - build
  #~ - build_docs
  - deploy
  #~ - deploy_docs

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - python -m pip install pytest twine==1.11.0 wheel
  - python -m pip install -r requirements.txt

Run PyTest:
  stage: test
  script:
    - python -m pytest testing
  retry: 2

Build:
  stage: build
  script:
    - python setup.py sdist bdist_wheel
  retry: 2
  artifacts:
    paths:
      - dist/*
    expire_in: 1 week
  only:
    - master
    - tags

#~ Build Docs:
  #~ stage: build_docs
  #~ script:
    #~ - mkdir .public
    #~ - sphinx-build -E -b html ./doc ./doc/_build
    #~ - cp -r ./doc/_build/* .public
  #~ artifacts:
    #~ paths:
      #~ - .public
  #~ only:
    #~ - master
    #~ - tags

Push to TestPyPI:
  stage: deploy
  variables:
    TEST_TWINE_USERNAME: $TEST_PYPI_USERNAME
    TEST_TWINE_PASSWORD: $TEST_PYPI_PASSWORD
    TEST_REPO_URL: https://test.pypi.org/legacy/
  script:
    - twine upload -u $TEST_TWINE_USERNAME -p $TEST_TWINE_PASSWORD --repository-url $TEST_REPO_URL dist/*
  only:
    - master

Push to PyPI:
  stage: deploy
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - twine upload dist/*
  only:
    - tags
  
#~ Deploy Docs:
  #~ stage: deploy_docs
  #~ script:
    #~ - mv .public public
  #~ artifacts:
    #~ paths:
      #~ - public
  #~ only:
    #~ - tags

#pages:
#  script:
#  - pip install sphinx sphinx-rtd-theme
#  - cd doc ; make html
#  - mv build/html/ ../public/
#  artifacts:
#    paths:
#    - public
#  only:
#  - master
